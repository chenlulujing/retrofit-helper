apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.xchengDroid'//必加，com.github.<用户名>(也就是你GtiHub上的地址)
android {
    compileSdkVersion 28
// INFO: The specified Android SDK Build Tools version (27.0.3) is ignored, as it is below the minimum supported version (28.0.3) for Android Gradle Plugin 3.5.4.
//Android SDK Build Tools 28.0.3 will be used.
//To suppress this warning, remove "buildToolsVersion '27.0.3'" from your build.gradle file, as each version of the Android Gradle Plugin now has a default version of the build tools.
//Remove Build Tools version and sync project
//Affected Modules: sample
    buildToolsVersion "29.0.3"
    lintOptions {
        //静态代码检查
        abortOnError false
    }
    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'androidx.annotation:annotation:1.1.0'
    //noinspection GradleDependency
    compileOnly 'androidx.lifecycle:lifecycle-common:2.1.0'
    api 'com.squareup.retrofit2:retrofit:2.9.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.14.9'
    //api 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle:4.0.2'

}
//https://jitpack.io/#xchengDroid/retrofit-helper
//---------------------------------------------下面的必加，加上下面的作用是在上传后会带上注释，不然会发现没有注释
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

